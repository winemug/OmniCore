// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OmniCore.Repository;

namespace OmniCore.Repository.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4");

            modelBuilder.Entity("OmniCore.Model.Entities.MedicationDeliveryEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("DeliveredAmount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeliveryStart")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("IntendedAmount")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan?>("IntendedDuration")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("PodId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("SyncId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PodId");

                    b.ToTable("MedicationDeliveries");
                });

            modelBuilder.Entity("OmniCore.Model.Entities.MedicationEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int>("Hormone")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfileCode")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("SyncId")
                        .HasColumnType("TEXT");

                    b.Property<string>("UnitName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UnitNameShort")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("UnitsPerMilliliter")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Medications");
                });

            modelBuilder.Entity("OmniCore.Model.Entities.PodEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExpiredReminder")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExpiresSoonReminder")
                        .HasColumnType("TEXT");

                    b.Property<string>("HwRevision")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("Lot")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("MedicationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Options")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("PodUtcOffset")
                        .HasColumnType("TEXT");

                    b.Property<uint>("RadioAddress")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReservoirLowReminder")
                        .HasColumnType("TEXT");

                    b.Property<uint>("Serial")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SwRevision")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("SyncId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<long?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MedicationId");

                    b.HasIndex("UserId");

                    b.ToTable("Pods");
                });

            modelBuilder.Entity("OmniCore.Model.Entities.PodRadioEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("PodId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("RadioId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("SyncId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PodId");

                    b.HasIndex("RadioId");

                    b.ToTable("PodRadioEntity");
                });

            modelBuilder.Entity("OmniCore.Model.Entities.PodRequestEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("ErrorText")
                        .HasColumnType("TEXT");

                    b.Property<int?>("FailureType")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Parameters")
                        .HasColumnType("TEXT");

                    b.Property<long?>("PodId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RequestStatus")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RequestType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ResultReceived")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("StartEarliest")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("StartLatest")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Started")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("SyncId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PodId");

                    b.ToTable("PodRequests");
                });

            modelBuilder.Entity("OmniCore.Model.Entities.RadioEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeviceName")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DeviceUuid")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Options")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ServiceUuid")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("SyncId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserDescription")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Radios");
                });

            modelBuilder.Entity("OmniCore.Model.Entities.RadioEventEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Data")
                        .HasColumnType("BLOB");

                    b.Property<int>("EventType")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("RadioId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Rssi")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("SyncId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RadioId");

                    b.ToTable("RadioEvents");
                });

            modelBuilder.Entity("OmniCore.Model.Entities.UserEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ManagedRemotely")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("SyncId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OmniCore.Model.Entities.MedicationDeliveryEntity", b =>
                {
                    b.HasOne("OmniCore.Model.Entities.PodEntity", "Pod")
                        .WithMany()
                        .HasForeignKey("PodId");
                });

            modelBuilder.Entity("OmniCore.Model.Entities.PodEntity", b =>
                {
                    b.HasOne("OmniCore.Model.Entities.MedicationEntity", "Medication")
                        .WithMany()
                        .HasForeignKey("MedicationId");

                    b.HasOne("OmniCore.Model.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("OmniCore.Model.Entities.PodRadioEntity", b =>
                {
                    b.HasOne("OmniCore.Model.Entities.PodEntity", "Pod")
                        .WithMany("PodRadios")
                        .HasForeignKey("PodId");

                    b.HasOne("OmniCore.Model.Entities.RadioEntity", "Radio")
                        .WithMany("PodRadios")
                        .HasForeignKey("RadioId");
                });

            modelBuilder.Entity("OmniCore.Model.Entities.PodRequestEntity", b =>
                {
                    b.HasOne("OmniCore.Model.Entities.PodEntity", "Pod")
                        .WithMany()
                        .HasForeignKey("PodId");
                });

            modelBuilder.Entity("OmniCore.Model.Entities.RadioEventEntity", b =>
                {
                    b.HasOne("OmniCore.Model.Entities.RadioEntity", "Radio")
                        .WithMany()
                        .HasForeignKey("RadioId");
                });
#pragma warning restore 612, 618
        }
    }
}
